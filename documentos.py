# -*- coding: utf-8 -*-
"""documentos.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/10i4H7XfzUJ1LCGd3AwkzpivIJsBGQzMi

# **Projeto: Sistema de gerenciamento de biblioteca digital em python**
"""

#Importa as bibliotecas usadas para a atividade:
import os
import shutil
from google.colab import files

"""Cria a função de listar documentos"""

#Definimos a função de listar documentos
def listar_documentos():
    print("\nDocumentos disponíveis:")
    #Fazemos um for na lista de documentos dentro do diretório
    for arquivo in os.listdir('documentos'):
      #Fazemos um print com um separador para melhor visualização
        print("-", arquivo)

#Definimos a função de organizar documentos
def organizar_documentos():
    for arquivo in os.listdir('documentos'):
      #Separa o nome da extensao
        nome, extensao = arquivo.split('.')

        # define tipo como a extensão
        tipo = extensao

        # tenta pegar o ano como os 4 últimos caracteres do nome
        if len(nome) >= 4 and nome[-4:].isdigit():
            ano = nome[-4:]
        #caso não consiga achar retorna desconhecido
        else:
            ano = 'desconhecido'
        #Cria as pastas baseado primeiro no tipo e depois no ano
        destino = os.path.join('documentos', tipo, ano)
        os.makedirs(destino, exist_ok=True)
        origem = os.path.join('documentos', arquivo)
        shutil.move(origem, os.path.join(destino, arquivo))
    print("\nArquivos organizados por tipo e ano.")

#Definimos a função de adicionar novos documentos
def adicionar_documento_upload():
    print("\nFaça upload dos arquivos PDF ou EPUB:")
    #Utilizamos a bibliotecas files para fazer upload dentro do colab
    arquivos = files.upload()
    #Como os arquivos novos se transformam em dicionários, criamos uma funçao que utiliza como chave o nome do arquivo e move o arquivo para o diretório documentos
    for nome in arquivos:
        shutil.move(nome, os.path.join('documentos', nome))
        print(f"Arquivo '{nome}' adicionado à pasta 'documentos'.")

#Definimos a função de renomear documentos
def renomear_documento(nome_antigo, nome_novo):
    #renomeia o documento pelo caminho onde ele se encontra
    os.rename(os.path.join('documentos', nome_antigo), os.path.join('documentos', nome_novo))
    print(f"\nArquivo renomeado para '{nome_novo}'.")

#Definimos a função de remover documentos
def remover_documento(nome):
    os.remove(os.path.join('documentos', nome))
    print(f"\nArquivo '{nome}' removido.")

